AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  toiletdb interface with dbstore and management

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.9
    MemorySize: 512
    Timeout: 3
    Environment:
        Variables:
          AWSENV : "AWS_SAM"
          DEVENV : "OSX"
          REGION : "ap-northeast-2" 
          TABLE :  "TEST_CASE_0_build_info"

Resources:
  DBInterFaceApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowMethods: "'GET,POST'"
        AllowOrigins: 
          - "*"
      DefaultRouteSettings:
        ThrottlingBurstLimit: 200
      Tags:
        Tag: "Map default config with route settings"
  ### API Health check 를 위한 Lambda function
  CheckApi:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: check_api/
      Handler: app.lambda_handler
      Events:
        Api:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Method: get
            Path: /
            ApiId: !Ref DBInterFaceApi
  CommonSrc:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LicenseInfo: "common_source_v0"
      ContentUri: common_src/
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9
  DBInterfaceFunction: ### 분리하자
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: db_interface/
      Handler: app.lambda_handler
      MemorySize: 128
      Timeout: 900
      Policies: AmazonDynamoDBFullAccess
      Layers:
        - !Ref CommonSrc
        - !Sub arn:aws:lambda:ap-northeast-2:499644552089:layer:dynamodb-geo:3
        - !Sub arn:aws:lambda:ap-northeast-2:499644552089:layer:requests:4
        - !Sub arn:aws:lambda:ap-northeast-2:499644552089:layer:pandas:1
        - !Sub arn:aws:lambda:ap-northeast-2:499644552089:layer:xmltodict:2
      
      Architectures:
        - x86_64
      Events:
      ## 연결 완료 payload 2.0에 따라 수정할 필요 있음
        Api:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Method: post
            Path: /
            ApiId: !Ref DBInterFaceApi
  GetDetails: ### 분리하자
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: db_detail/
      Handler: app.lambda_handler
      MemorySize: 128
      Timeout: 900
      Policies: AmazonDynamoDBFullAccess
      Layers:
        - !Ref CommonSrc
        - !Sub arn:aws:lambda:ap-northeast-2:499644552089:layer:dynamodb-geo:3
        - !Sub arn:aws:lambda:ap-northeast-2:499644552089:layer:requests:4
        - !Sub arn:aws:lambda:ap-northeast-2:499644552089:layer:pandas:1
        - !Sub arn:aws:lambda:ap-northeast-2:499644552089:layer:xmltodict:2
      Architectures:
        - x86_64
      Events:
      ## 연결 완료 payload 2.0에 따라 수정할 필요 있음
        Api:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Method: post
            Path: /details
            ApiId: !Ref DBInterFaceApi
  
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  DBInterFaceAPI:
    Description: "DB interface를 위한 ag"
    Value: !Sub "https://${DBInterFaceApi}.execute-api.${AWS::Region}.amazonaws.com/"
  # DBInterfaceFunction:
  #   Description: "DBInterface Function Arn"
  #   Value: !GetAtt DBInterfaceFunction.Arn
  # DBInterfaceFunctionIamRole:
  #   Description: "DBInterface IAM Arn"
  #   Value: !GetAtt DBInterfaceFunctionIAM.Arn
